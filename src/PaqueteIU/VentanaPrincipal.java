/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PaqueteIU;

import PaqueteModelo.Cadrado;
import PaqueteModelo.Xogo;
import java.awt.event.ActionEvent;

import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.*;
import javax.swing.JLabel;

import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author a22lucastf
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    //ATRIBUTOS
    public Timer timer;
    public Xogo xogo;
    private Iterator<Cadrado> iterator3;
    public int contadorScore = 0;
    int multiplicadorScore = 1;
    long clipTimePosition;
    public static Clip cliper;

    /**
     * Creates new form VentanaPrincipalFrame
     */
    public VentanaPrincipal() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        levels = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        labelTituloLevel = new javax.swing.JLabel();
        easyButton = new javax.swing.JButton();
        normalButton = new javax.swing.JButton();
        hardButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        frameJuego = new javax.swing.JFrame();
        panelJuego = new javax.swing.JPanel();
        scoreLabel = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        level = new javax.swing.JLabel();
        pauseButton = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        labelTituloTetris = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();

        levels.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTituloLevel.setBackground(new java.awt.Color(255, 255, 255));
        labelTituloLevel.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        labelTituloLevel.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloLevel.setText("SELECT DIFFICULTY");
        jPanel3.add(labelTituloLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 270, -1));

        easyButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        easyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Easy.png"))); // NOI18N
        easyButton.setContentAreaFilled(false);
        easyButton.setSelected(true);
        easyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyButtonActionPerformed(evt);
            }
        });
        jPanel3.add(easyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        normalButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        normalButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Mid.png"))); // NOI18N
        normalButton.setContentAreaFilled(false);
        normalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalButtonActionPerformed(evt);
            }
        });
        jPanel3.add(normalButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        hardButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        hardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Hard.png"))); // NOI18N
        hardButton.setContentAreaFilled(false);
        hardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardButtonActionPerformed(evt);
            }
        });
        jPanel3.add(hardButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, -1));

        levels.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 340));

        frameJuego.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        frameJuego.setTitle("Tetris");
        frameJuego.setBackground(new java.awt.Color(204, 204, 204));
        frameJuego.setForeground(java.awt.Color.gray);
        frameJuego.setMinimumSize(new java.awt.Dimension(700, 850));
        frameJuego.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                frameJuegoPropertyChange(evt);
            }
        });
        frameJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                frameJuegoKeyPressed(evt);
            }
        });
        frameJuego.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelJuego.setBackground(new java.awt.Color(0, 0, 0));
        panelJuego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelJuego.setNextFocusableComponent(playButton);
        panelJuego.setLayout(null);
        frameJuego.getContentPane().add(panelJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 400, 800));

        scoreLabel.setBackground(new java.awt.Color(255, 255, 255));
        scoreLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreLabel.setText("Score:");
        frameJuego.getContentPane().add(scoreLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 24, -1, -1));

        score.setBackground(new java.awt.Color(255, 255, 255));
        score.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        score.setForeground(new java.awt.Color(255, 255, 255));
        score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        score.setText("0");
        frameJuego.getContentPane().add(score, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 94, 150, -1));

        levelLabel.setBackground(new java.awt.Color(255, 255, 255));
        levelLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        levelLabel.setForeground(new java.awt.Color(255, 255, 255));
        levelLabel.setText("Level:");
        frameJuego.getContentPane().add(levelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 191, -1, -1));

        level.setBackground(new java.awt.Color(255, 255, 255));
        level.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        level.setForeground(new java.awt.Color(255, 255, 255));
        level.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        level.setText("1");
        frameJuego.getContentPane().add(level, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 261, 150, -1));

        pauseButton.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        pauseButton.setText("PAUSE");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });
        frameJuego.getContentPane().add(pauseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 601, -1, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, -1));

        frameJuego.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 810));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tetris");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(102, 102, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exitButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/EXIT_STOPPED.png"))); // NOI18N
        exitButton.setBorderPainted(false);
        exitButton.setContentAreaFilled(false);
        exitButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/EXIT.gif"))); // NOI18N
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 151, -1));

        playButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/PLAY_STOPPED.png"))); // NOI18N
        playButton.setContentAreaFilled(false);
        playButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/PLAY.gif"))); // NOI18N
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        jPanel1.add(playButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 151, 107));

        settingsButton.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Levels-1.png.png"))); // NOI18N
        settingsButton.setContentAreaFilled(false);
        settingsButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/Levels.gif"))); // NOI18N
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(settingsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 151, 107));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 50, 10));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 50, 10));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/sound.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setSelected(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 70, 70));

        labelTituloTetris.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/tetris.png"))); // NOI18N
        jPanel1.add(labelTituloTetris, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 320, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Imagenes/fondo.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-150, 0, 550, 680));

        jToggleButton1.setText("jToggleButton1");
        jPanel1.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed

        this.iniciarPartida();

    }//GEN-LAST:event_playButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        levels.setVisible(rootPaneCheckingEnabled);
        levels.setSize(260, 340);
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        this.dispose();
    }//GEN-LAST:event_exitButtonMouseClicked

    private void easyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_easyButtonActionPerformed

    private void hardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hardButtonActionPerformed

    private void normalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_normalButtonActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed

        if (pauseButton.isSelected()) {
            timer.stop();
            xogo.pausa = true;
        } else {
            timer.start();
            xogo.pausa = false;
        }


    }//GEN-LAST:event_pauseButtonActionPerformed

    private void frameJuegoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_frameJuegoPropertyChange
        //this.setSize(1000, 1000);
    }//GEN-LAST:event_frameJuegoPropertyChange

    private void frameJuegoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frameJuegoKeyPressed

        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("A")) {
            System.out.println("A");
            xogo.moverFichaEsquerda();
        }
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("D")) {
            System.out.println("D");
            xogo.moverFichaDereita();
        }
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("S")) {
            System.out.println("S");
            xogo.moverFichaAbaixo();
            this.actualizarPanel();
        }
        if (KeyEvent.getKeyText(evt.getKeyCode()).equals("W")) {
            System.out.println("PULSADA W");

            System.out.println("POSICION: " + xogo.fichaActual.posicion);
            xogo.fichaActual.posicion++;
            xogo.RotarFicha();
        }


    }//GEN-LAST:event_frameJuegoKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jButton1.isSelected()) {
            clipTimePosition = cliper.getMicrosecondPosition();
            cliper.stop();
        } else {
            cliper.setMicrosecondPosition(clipTimePosition);
            cliper.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String musicPath = "src\\Resources\\Musica\\menu.wav";
                new VentanaPrincipal().setVisible(true);
                playMenuMusic(musicPath);
            }
        });
    }

    private void iniciarPartida() {
        this.setVisible(false);              //ESCONDE EL FRAME DE LA VENTANA PRINCIPAL
        frameJuego.setVisible(true);        // MUESTRA EL FRAME DEL JUEGO 
        frameJuego.setFocusable(true);
        panelJuego.setFocusable(true);
        frameJuego.setLocationRelativeTo(this.rootPane);
        xogo = new Xogo(false, 0, this);
        xogo.xenerarNovaFicha();
        movimientoCaida();
        timer.start();
//         System.out.println(panelJuego.getHeight()); 
//        System.out.println(panelJuego.getWidth());
    }

    public static void playMenuMusic(String musicLocation) {
        try {
            File musicPath = new File(musicLocation);
            if (musicPath.exists()) {
                AudioInputStream audioInput = AudioSystem.getAudioInputStream(musicPath);
                cliper = AudioSystem.getClip();
                cliper.open(audioInput);
                cliper.start();
                cliper.loop(Clip.LOOP_CONTINUOUSLY);
            } else {
                System.out.println("No se encontró el archivo");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void movimientoCaida() {

        timer = new Timer(1000, (ActionEvent e) -> {
            xogo.moverFichaAbaixo();
            aumentarScore();
            this.actualizarPanel();

        });
    }

    public void aumentarScore() {
        boolean gameOver = false;

        do {
            score.setText(String.valueOf((++contadorScore) * multiplicadorScore));

        } while (gameOver = false);

//            
//
//            }
    }

    public void actualizarPanel() {
        panelJuego.updateUI();
    }

    public void pintarCadrado(JLabel lblCadrado) {
        this.panelJuego.add(lblCadrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(lblCadrado.getX(), lblCadrado.getY(), -1, -1)); //PINTA LA LABEL ASOCIADA A CADA OBJETO CUADRADO EN EL PANEL DEL JUEGO

    }

    public void borrarCadrado() {

    }

    public JPanel getPanelJuego() {
        return panelJuego;
    }

    public void setPanelJuego(JPanel panelJuego) {
        this.panelJuego = panelJuego;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton easyButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JFrame frameJuego;
    private javax.swing.JButton hardButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel labelTituloLevel;
    private javax.swing.JLabel labelTituloTetris;
    private javax.swing.JLabel level;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JFrame levels;
    private javax.swing.JButton normalButton;
    private javax.swing.JPanel panelJuego;
    private javax.swing.JToggleButton pauseButton;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel score;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JButton settingsButton;
    // End of variables declaration//GEN-END:variables
}
